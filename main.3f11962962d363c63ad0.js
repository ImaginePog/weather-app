(()=>{"use strict";var t={};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var i=t.g.document;if(!e&&i&&(i.currentScript&&(e=i.currentScript.src),!e)){var n=i.getElementsByTagName("script");if(n.length)for(var r=n.length-1;r>-1&&!e;)e=n[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})();const e=(()=>{let t={};function e(e,i=document,n="single"){t[e]="single"==n?{object:i.querySelector(e),queryType:n,parent:i}:{object:i.querySelectorAll(e),queryType:n,parent:i}}return{loadObjects:function(){e("#app"),e("#main"),e(".loading-modal"),e(".search-bar"),e("#location-search-bar"),e(".unit-switch"),e(".location"),e(".temperature-main"),e(".temperature-max"),e(".temperature-min"),e(".temperature-feels-like"),e(".condition-text"),e(".condition-img"),e(".uv-front"),e(".uv-index"),e(".cloudiness"),e(".humidity"),e(".wind-speed"),e(".wind-direction"),e(".moon-img"),e(".moon-phase"),e(".visibility"),e(".rain"),e(".pollution-front"),e(".pollution"),e(".sunrise"),e(".sunset"),e(".avg-humidity"),e(".max-windspeed"),e(".avg-visibility"),e(".hours-container"),e(".info-card",document,"multiple")},getObject:function(e){return t[e]||console.error("Object not loaded"),t[e].object},reloadObject:function(i){if(!t[i])return console.error("FATAL EROOR WE AINT DEALING WITH THIS SHIT NAH"),null;e(i,t[i].parent,t[i].queryType)}}})();const i=class{#t;#e;#i;#n;#r;#s;#a;#o;#c;#u;#l;#d;constructor(t){this.#t=t.temperature,this.#e=t.temperatureMax,this.#i=t.temperatureMin,this.#n=t.feelsLike,this.#r=t.cloudCoverage,this.#s=t.humidity,this.#o=t.wind,this.#c=t.visibility,this.#a=t.rain,this.#u=t.windMax,this.#l=t.visibilityAvg,this.temperatureUnit={metric:" 째C",imperial:" 째F"},this.lengthUnit={metric:" km",imperial:" miles"},this.speedUnit={metric:" km/h",imperial:" mph"},this.#d="metric"}set unitSystem(t){this.#d=t}set temperature(t){this.#t=t}get temperature(){return"metric"===this.#d?this.#t.celsius+this.temperatureUnit.metric:this.#t.fahrenheit+this.temperatureUnit.imperial}set temperatureMax(t){this.#e=t}get temperatureMax(){return"metric"===this.#d?this.#e.celsius+this.temperatureUnit.metric:this.#e.fahrenheit+this.temperatureUnit.imperial}set temperatureMin(t){this.#i=t}get temperatureMin(){return"metric"===this.#d?this.#i.celsius+this.temperatureUnit.metric:this.#i.fahrenheit+this.temperatureUnit.imperial}set feelsLike(t){this.#n=t}get feelsLike(){return"metric"===this.#d?this.#n.celsius+this.temperatureUnit.metric:this.#n.fahrenheit+this.temperatureUnit.imperial}set cloudCoverage(t){this.#r=t}get cloudCoverage(){return this.#r+"%"}set humidity(t){this.#s=t}get humidity(){return{current:this.#s.current+"%",average:this.#s.average+"%"}}set rain(t){this.#a=t}get rain(){return this.#a+"%"}set wind(t){this.#o=t}get wind(){return"metric"===this.#d?{speed:this.#o.speedKPH+this.speedUnit.metric,direction:this.#o.direction}:{speed:this.#o.speedMPH+this.speedUnit.imperial,direction:this.#o.direction}}set visibility(t){this.#c=t}get visibility(){return"metric"===this.#d?this.#c.km+this.lengthUnit.metric:this.#c.miles+this.lengthUnit.imperial}set windMax(t){this.#u=t}get windMax(){return"metric"===this.#d?this.#u.speedKPH+this.speedUnit.metric:this.#u.speedMPH+this.speedUnit.imperial}set visibilityAvg(t){this.#l=t}get visibilityAvg(){return"metric"===this.#d?this.#l.km+this.lengthUnit.metric:this.#l.miles+this.lengthUnit.imperial}};const n=class extends i{constructor(t){super(t),this.time=t.time,this.icon=t.icon,this.current=t.current}};const r=class extends i{constructor(t){super(t),this.location=t.location,this.condition=t.condition,this.uv=t.uv,this.moon=t.moon,this.sun=t.sun,this.pollution=t.pollution,this.hours=[]}set unitSystem(t){super.unitSystem=t,this.hours.forEach((e=>{e.unitSystem=t}))}addHours(t){this.hours=t.map((t=>{t.unitSystem=this.unitSystem,new n(t)}))}};function s(t){const e=new r({location:{country:t.location.country,name:t.location.name,time:t.location.localtime},temperature:{celsius:Math.round(t.current.temp_c),fahrenheit:Math.round(t.current.temp_f)},temperatureMax:{celsius:Math.round(t.forecast.forecastday[0].day.maxtemp_c),fahrenheit:Math.round(t.forecast.forecastday[0].day.maxtemp_f)},temperatureMin:{celsius:Math.round(t.forecast.forecastday[0].day.mintemp_c),fahrenheit:Math.round(t.forecast.forecastday[0].day.mintemp_f)},feelsLike:{celsius:Math.round(t.current.feelslike_c),fahrenheit:Math.round(t.current.feelslike_f)},condition:{text:t.current.condition.text,icon:(a=t.current.condition.icon,a.replace("64x64","128x128"))},uv:{index:t.current.uv,level:(s=t.current.uv,s<=2?"low":s<=5?"mid":"high")},cloudCoverage:t.current.cloud,humidity:{current:t.current.humidity,average:t.forecast.forecastday[0].day.avghumidity},wind:{speedKPH:t.current.wind_kph,speedMPH:t.current.wind_mph,direction:t.current.wind_dir},moon:{illumination:t.forecast.forecastday[0].astro.moon_illumination,phase:t.forecast.forecastday[0].astro.moon_phase},visibility:{km:t.current.vis_km,miles:t.current.vis_miles},rain:t.forecast.forecastday[0].day.daily_chance_of_rain,sun:{rise:t.forecast.forecastday[0].astro.sunrise,set:t.forecast.forecastday[0].astro.sunset},pollution:{index:t.current.air_quality["gb-defra-index"],level:(i=t.current.air_quality["gb-defra-index"],i<=3?"low":i<=6?"mid":"high")},windMax:{speedKPH:t.forecast.forecastday[0].day.maxwind_kph,speedMPH:t.forecast.forecastday[0].day.maxwind_mph},visibilityAvg:{km:t.forecast.forecastday[0].day.avgvis_km,miles:t.forecast.forecastday[0].day.avgvis_miles}});var i,s,a;return e.hours=function(t,e){const i=[];let r=t;t>=17?r=t-6:t<=6&&(r=t+6);for(let s=r-6;s<=r+6;s+=2)s==t&&(e[s].current=!0),i.push(new n({icon:e[s].condition.icon,feelsLike:{celsius:Math.round(e[s].feelslike_c),fahrenheit:Math.round(e[s].feelslike_f)},time:e[s].time.split(" ")[1],rain:e[s].chance_of_rain,current:e[s].current}));return i}(new Date(t.location.localtime).getHours(),t.forecast.forecastday[0].hour),e}const a=(()=>{let t="metric",e=null;function i(){e.unitSystem=t}return{start:async function(t){u.resetCards(),u.showLoading();try{const n=await async function(t){const e=await fetch("https://api.weatherapi.com/v1/forecast.json?key=f52a32794db54c7a92182004232909&days=3&aqi=yes&q="+t,{mode:"cors"}),i=await e.json();if(i.error)throw Error(i.error.message);return i}(t);e=s(n),i(),u.update()}catch(t){u.showContent(),alert(t)}},toggleUnitSystem:function(){t="metric"===t?"imperial":"metric",i()},getWeatherData:function(){return e},getSelectedUnitSystem:function(){return t}}})(),o=t.p+"./images/full-moon.909f7137fe248e3d9553..png",c=t.p+"./images/first-quarter.ff153c13f12579719c2d..png",u=(()=>{const t={low:"#629d68",mid:"#ad6b2d",high:"#863e3e"};function i(){window.scrollTo(0,0),e.getObject(".loading-modal").classList.add("hide")}function n(t){const i=e.getObject(".hours-container");i.innerText="";const n=document.createDocumentFragment();t.forEach((t=>{const e=function(t){const e=document.createElement("div");e.classList.add("hour-container","content-card");const i=document.createElement("p");i.classList.add("hour-title"),i.textContent=t.time;const n=document.createElement("div");n.classList.add("img","hour-condition-img"),n.style.backgroundImage="url("+t.icon+")";const r=document.createElement("p");return r.classList.add("temperature"),r.textContent=t.feelsLike,t.current&&e.classList.add("current-hour-container"),e.append(i,n,r),e}(t);n.append(e)})),i.append(n)}return{renderUI:function(){const t=e.getObject(".unit-switch"),i=a.getSelectedUnitSystem();t.innerText="metric"===i?"째C":"째F"},showLoading:function(){e.getObject(".loading-modal").classList.remove("hide")},showContent:i,update:function(){const r=a.getWeatherData();e.getObject(".location").textContent=r.location.name+", "+r.location.country,e.getObject(".temperature-main").textContent=r.temperature,e.getObject(".temperature-max").textContent=r.temperatureMax,e.getObject(".temperature-min").textContent=r.temperatureMin,e.getObject(".temperature-feels-like").textContent=r.feelsLike,e.getObject(".condition-text").textContent=r.condition.text,e.getObject(".condition-img").style.backgroundImage="url("+r.condition.icon+")",e.getObject(".uv-index").textContent=r.uv.index,e.getObject(".uv-front").style.backgroundColor=t[r.uv.level],e.getObject(".cloudiness").textContent=r.cloudCoverage,e.getObject(".humidity").textContent=r.humidity.current,e.getObject(".wind-speed").textContent=r.wind.speed,e.getObject(".wind-direction").textContent=r.wind.direction,e.getObject(".moon-img").style.backgroundImage="url("+function(t){switch(t){case"Full Moon":return o;case"First Quarter":case"Last Quarter":case"New Moon":case"Waning Gibbous":case"Waxing Gibbous":case"Waning Crescent":case"Waxing Crescent":return c}}(r.moon.phase)+")",e.getObject(".moon-phase").textContent=r.moon.phase,e.getObject(".visibility").textContent=r.visibility,e.getObject(".rain").textContent=r.rain,e.getObject(".pollution").textContent=r.pollution.index,e.getObject(".pollution-front").style.backgroundColor=t[r.pollution.level],e.getObject(".sunrise").textContent=r.sun.rise,e.getObject(".sunset").textContent=r.sun.set,e.getObject(".avg-humidity").textContent=r.humidity.average,e.getObject(".max-windspeed").textContent=r.windMax,e.getObject(".avg-visibility").textContent=r.visibilityAvg,n(r.hours),i()},flipCard:function(t){t.classList.toggle("flip")},resetCards:function(){e.getObject(".info-card").forEach((t=>{t.classList.contains("flip")&&t.classList.toggle("flip")}))}}})(),l=(()=>{function t(t){t.preventDefault();const i=e.getObject("#location-search-bar").value;a.start(i),t.srcElement.reset()}function i(){a.toggleUnitSystem(),u.renderUI(),u.update()}function n(t){t.target.dataset.action&&u.flipCard(t.target)}return{listen:function(){e.getObject(".search-bar").addEventListener("submit",t),e.getObject(".unit-switch").addEventListener("click",i),e.getObject("#main").addEventListener("click",n)}}})();async function d(t){await a.start(t),l.listen()}e.loadObjects(),u.showLoading(),u.renderUI(),async function(){try{const t=await new Promise((function(t,e){navigator.geolocation||Promise.reject("No geolocation API"),navigator.geolocation.getCurrentPosition(t,e)}));d(t.coords.latitude+","+t.coords.longitude)}catch(t){console.error(t);d("Canada")}}()})();